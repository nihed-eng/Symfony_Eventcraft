{% extends 'base.html.twig' %}

<<<<<<< HEAD
{% block title %}Nouvelle Réservation{% endblock %}

    {% block stylesheets %}


        <style>
.form-control {
    background-color: #B19BB2;
    border: 1px solid;
    border-radius: 0px;
    padding: 0.5rem 0.75rem;
    font-size: 1rem;
    transition: all 0.3s ease;
    box-shadow: none;
    outline: none;
    color: #fff;
}

.form-control:focus {
    background-color: #A288A6;
    border-color: #fff;
    box-shadow: 0 0 0 4px rgba(255, 255, 255, 0.2);
    transform: scale(1.02);
}
.btn-primary {
 width: 100%;
    background-color: #CBA979;
    border: none;
    color: #fff;
    padding: 0.5rem 1.2rem;
    font-size: 19px;
    font-weight: 500;
    border-radius: 0;
    transition: background-color 0.3s ease, transform 0.2s ease;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.btn-primary:hover {
    background-color: #98A695;
    transform: scale(1.05);
    color: #fff;
}


</style>
    {% endblock %}


{% block body %}
    {% form_theme form 'bootstrap_5_layout.html.twig' %}

    <div class="container mt-5">
        <h1 class="mb-4">Créer une nouvelle réservation</h1>

        {{ include('reservation/_form.html.twig', {'button_label': 'Réserver'}) }}

        <a href="{{ path('app_reservation_index') }}" class="btn btn-primary mt-3">Anuuler</a>
    </div>
{% endblock %}
=======
{% block title %}Réserver {{ salle.nomSalle }} | EventCraft{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&family=Playfair+Display:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #8D598F;
            --secondary: #CBA979;
            --accent: #F0C8C6;
            --light: #F8F9FA;
            --dark: #2D2D2D;
            --error: #dc3545;
            --success: #28a745;
            --animation-duration: 0.4s;
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            color: var(--dark);
            position: relative;
            min-height: 100vh;
            line-height: 1.6;
            margin: 0;
            padding: 0;
        }
        
        .fullscreen-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -2;
            overflow: hidden;
        }
        
        .fullscreen-bg::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url('{% if salle and salle.imageSalle is defined and salle.imageSalle %}{% set firstImage = salle.imageSalle|split(',')|first %}/images/{{ firstImage|split('/')|last|split('\\')|last }}{% else %}/images/default-salle.jpg{% endif %}');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            filter: brightness(0.7);
        }
        
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(228, 210, 210, 0);
            z-index: -1;
        }
        
        .is-invalid {
            border-color: var(--error) !important;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right calc(0.375em + 0.1875rem) center;
            background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
        }

        .invalid-feedback {
            display: none;
            width: 100%;
            margin-top: 0.25rem;
            font-size: 0.875em;
            color: var(--error);
        }

        .is-invalid ~ .invalid-feedback {
            display: block;
        }

        .was-validated .form-control:invalid {
            border-color: var(--error);
        }

        .was-validated .form-control:invalid ~ .invalid-feedback {
            display: block;
        }
        
        .reservation-container {
            max-width: 800px;
            margin: 4rem auto;
            padding: 3rem;
            background: rgb(255 255 255 / 45%);
            border-radius: 0px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            backdrop-filter: blur(5px);
            border: 1px solid rgba(255,255,255,0.2);
            position: relative;
            z-index: 1;
            transform: translateY(0);
            transition: all var(--animation-duration) ease;
        }
        
        .reservation-container:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 40px rgba(0,0,0,0.3);
        }
        
        .reservation-header {
            text-align: center;
            margin-bottom: 2rem;
            color: var(--primary);
            font-family: 'Playfair Display', serif;
            position: relative;
            padding-bottom: 1rem;
        }
        
        .reservation-header::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 3px;
            background: var(--secondary);
        }
        
        .form-group {
            margin-bottom: 1.8rem;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 0.6rem;
            font-weight: 500;
            color: var(--primary);
        }
        
        .form-control {
            width: 100%;
            padding: 0.8rem 1.2rem;
            border: 2px solid rgba(141, 89, 143, 0.3);
            border-radius: 0px;
            font-size: 1rem;
            transition: all 0.3s;
            background-color: rgba(255,255,255,0.8);
        }
        
        .form-control:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(141, 89, 143, 0.2);
            outline: none;
            background-color: white;
        }
        
        .btn-reserver {
            background: #8d598f;
            color: white;
            border: none;
            padding: 1rem 2rem;
            border-radius: 0px;
            font-weight: 600;
            font-size: 1.1rem;
            text-transform: uppercase;
            letter-spacing: 1px;
            cursor: pointer;
            transition: all 0.3s;
            display: block;
            width: 100%;
            margin: 2rem 0 1rem;
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        
        .btn-reserver:hover, .btn-reserver:focus {
            background: transparent;
            border: 2px solid  #8d598f;
            transform: translateY(-3px);
            box-shadow: 0 15px 30px rgba(0,0,0,0.2);
            letter-spacing: 1.5px;
            outline: none;
        }
        
        .back-link {
            display: inline-flex;
            align-items: center;
            color: white;
            background: var(--primary);
            padding: 0.6rem 1.2rem;
            border-radius: 50px;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s;
            box-shadow: 0 4px 10px rgba(141, 89, 143, 0.3);
        }
        
        .back-link:hover, .back-link:focus {
            background: var(--secondary);
            transform: translateY(-2px);
            color: white;
            text-decoration: none;
            outline: none;
        }
        
        .back-link i {
            margin-right: 0.5rem;
        }
        
        .alert {
            padding: 1rem 1.5rem;
            border-radius: 0px;
            margin-bottom: 1.5rem;
            position: relative;
            padding-left: 3.5rem;
            border-left: 4px solid transparent;
        }
        
        .alert i {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            font-size: 1.2rem;
        }
        
        .alert-error {
            background-color: rgba(249, 200, 200, 0.9);
            color: #b91c1c;
            border-left-color: #b91c1c;
        }
        
        .alert-success {
            background-color: rgba(220, 252, 231, 0.9);
            color: #166534;
            border-left-color: #166534;
        }
        
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.05); }
            100% { transform: scale(1); }
        }
        
        /* Responsive */
        @media (max-width: 768px) {
            .reservation-container {
                margin: 2rem 1rem;
                padding: 2rem 1.5rem;
                backdrop-filter: none;
                background: rgba(255, 255, 255, 0.98);
            }
        }

        @media (max-width: 480px) {
            .reservation-container {
                padding: 1.5rem 1rem;
                margin: 1rem 0.5rem;
            }
            
            .btn-reserver {
                padding: 0.8rem 1rem;
                font-size: 1rem;
            }
        }
    </style>
{% endblock %}

{% block body %}
    <!-- Arrière-plan plein écran -->
    <div class="fullscreen-bg"></div>
    <div class="overlay"></div>
    
    <div class="reservation-container animate__animated animate__fadeIn">
        <h1 class="reservation-header">Réserver {{ salle.nomSalle is defined ? salle.nomSalle : 'Salle' }}</h1>
        
        {% for message in app.flashes('error') %}
            <div class="alert alert-error animate__animated animate__shakeX" role="alert">
                <i class="fas fa-exclamation-circle" aria-hidden="true"></i>
                <span>{{ message }}</span>
            </div>
        {% endfor %}
        
        {% for message in app.flashes('success') %}
            <div class="alert alert-success animate__animated animate__fadeIn" role="alert">
                <i class="fas fa-check-circle" aria-hidden="true"></i>
                <span>{{ message }}</span>
            </div>
        {% endfor %}
        
        {{ include('reservation/_form.html.twig') }}
        
        <a href="{{ path('app_salle_index') }}" class="back-link animate__animated animate__fadeInUp">
            <i class="fas fa-arrow-left"></i> Retour aux salles
        </a>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Elements
            const form = document.querySelector('form');
            if (!form) return;

            const dateFields = {
                debut: document.querySelector('#{{ form.dateDebut.vars.id }}'),
                fin: document.querySelector('#{{ form.dateFin.vars.id }}')
            };

            // Error messages
            const errorMessages = {
                pastDate: 'La date de début doit être dans le futur',
                invalidRange: 'La date de fin doit être après la date de début'
            };

            // Date validation
            function validateDates() {
                if (!dateFields.debut || !dateFields.fin) return true;

                const now = new Date();
                const startDate = new Date(dateFields.debut.value);
                const endDate = new Date(dateFields.fin.value);
                
                if (startDate <= now) {
                    showError(dateFields.debut, errorMessages.pastDate);
                    return false;
                }
                
                if (endDate <= startDate) {
                    showError(dateFields.fin, errorMessages.invalidRange);
                    return false;
                }
                
                return true;
            }

            // Show error message
            function showError(field, message) {
                if (!field) return;
                
                // Create or get error element
                let errorElement = field.nextElementSibling;
                if (!errorElement || !errorElement.classList.contains('invalid-feedback')) {
                    errorElement = document.createElement('div');
                    errorElement.className = 'invalid-feedback';
                    field.parentNode.insertBefore(errorElement, field.nextSibling);
                }
                
                // Set error message and style
                errorElement.textContent = message;
                field.classList.add('is-invalid');
                field.focus();
            }

            // Clear errors on input
            function clearErrors() {
                if (dateFields.debut) dateFields.debut.classList.remove('is-invalid');
                if (dateFields.fin) dateFields.fin.classList.remove('is-invalid');
            }

            // Event listeners
            form.addEventListener('submit', function(e) {
                if (!validateDates()) {
                    e.preventDefault();
                }
            });

            if (dateFields.debut) dateFields.debut.addEventListener('input', clearErrors);
            if (dateFields.fin) dateFields.fin.addEventListener('input', clearErrors);

            // Animation on scroll
            const reservationContainer = document.querySelector('.reservation-container');
            if (reservationContainer) {
                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            entry.target.classList.add('animate__fadeInUp');
                            observer.unobserve(entry.target);
                        }
                    });
                }, { threshold: 0.1 });
                
                observer.observe(reservationContainer);
            }
        });
    </script>
{% endblock %}
>>>>>>> 6ab9b1d (Initial commit)
