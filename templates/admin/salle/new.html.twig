{% extends 'admin/layout.html.twig' %}

{% block title %}Ajouter une nouvelle salle | Admin{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .is-invalid {
            border-color: #dc3545 !important;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right calc(0.375em + 0.1875rem) center;
            background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
        }
        
        .invalid-feedback {
            display: none;
            width: 100%;
            margin-top: 0.25rem;
            font-size: 0.875em;
            color: #dc3545;
        }
        
        .is-invalid ~ .invalid-feedback {
            display: block;
        }
        
        .was-validated .form-control:invalid ~ .invalid-feedback {
            display: block;
        }
    </style>
{% endblock %}

{% block content %}
<div class="admin-header d-flex justify-content-between align-items-center mb-4">
    <div>
        <h1 class="admin-title mb-0">Ajouter une nouvelle salle</h1>
    </div>
    <a href="{{ path('app_admin_salles_full') }}" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left me-2"></i> Retour à la liste
    </a>
</div>

{% for label, messages in app.flashes %}
    {% for message in messages %}
        <div class="alert alert-{{ label }} alert-dismissible fade show">
            {{ message }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    {% endfor %}
{% endfor %}

<div class="card shadow-sm">
    <div class="card-body">
        {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'class': 'needs-validation'}}) }}
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        {{ form_label(form.nomSalle) }}
                        {{ form_widget(form.nomSalle, {
                            'attr': {
                                'class': 'form-control' ~ (form.nomSalle.vars.valid ? '' : ' is-invalid'),
                                'required': 'required'
                            }
                        }) }}
                        <div class="invalid-feedback">
                            {% if form.nomSalle.vars.errors|length %}
                                {% for error in form.nomSalle.vars.errors %}
                                    {{ error.message }}
                                {% endfor %}
                            {% else %}
                                Le nom de la salle est obligatoire
                            {% endif %}
                        </div>
                    </div>
                    
                    <div class="form-group mb-3">
                        {{ form_label(form.capacite) }}
                        {{ form_widget(form.capacite, {
                            'attr': {
                                'class': 'form-control' ~ (form.capacite.vars.valid ? '' : ' is-invalid'),
                                'required': 'required',
                                'min': 1
                            }
                        }) }}
                        <div class="invalid-feedback">
                            {% if form.capacite.vars.errors|length %}
                                {% for error in form.capacite.vars.errors %}
                                    {{ error.message }}
                                {% endfor %}
                            {% else %}
                                La capacité doit être un nombre positif
                            {% endif %}
                        </div>
                    </div>
                    
                    <div class="form-group mb-3">
                        {{ form_label(form.locationSalle) }}
                        {{ form_widget(form.locationSalle, {
                            'attr': {
                                'class': 'form-control' ~ (form.locationSalle.vars.valid ? '' : ' is-invalid'),
                                'required': 'required'
                            }
                        }) }}
                        <div class="invalid-feedback">
                            {% if form.locationSalle.vars.errors|length %}
                                {% for error in form.locationSalle.vars.errors %}
                                    {{ error.message }}
                                {% endfor %}
                            {% else %}
                                La localisation est obligatoire
                            {% endif %}
                        </div>
                    </div>
                </div>
                
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        {{ form_label(form.equipement) }}
                        {{ form_widget(form.equipement, {
                            'attr': {
                                'class': 'form-control' ~ (form.equipement.vars.valid ? '' : ' is-invalid'),
                                'rows': 3
                            }
                        }) }}
                        <div class="invalid-feedback">
                            {{ form_errors(form.equipement) }}
                        </div>
                    </div>
                    
                    <div class="form-group mb-3">
                        {{ form_label(form.qualite) }}
                        {{ form_widget(form.qualite, {
                            'attr': {
                                'class': 'form-control' ~ (form.qualite.vars.valid ? '' : ' is-invalid')
                            }
                        }) }}
                        <div class="invalid-feedback">
                            {{ form_errors(form.qualite) }}
                        </div>
                    </div>
                    
                    <div class="form-group mb-3">
                        {{ form_label(form.prix) }}
                        {{ form_widget(form.prix, {
                            'attr': {
                                'class': 'form-control' ~ (form.prix.vars.valid ? '' : ' is-invalid'),
                                'required': 'required',
                                'min': 0
                            }
                        }) }}
                        <div class="invalid-feedback">
                            {% if form.prix.vars.errors|length %}
                                {% for error in form.prix.vars.errors %}
                                    {{ error.message }}
                                {% endfor %}
                            {% else %}
                                Le prix doit être un nombre positif
                            {% endif %}
                        </div>
                    </div>
                    
                    <div class="form-group mb-3">
                        {{ form_label(form.imageFile) }}
                        {{ form_widget(form.imageFile, {
                            'attr': {
                                'class': 'form-control' ~ (form.imageFile.vars.valid ? '' : ' is-invalid'),
                                'accept': 'image/*'
                            }
                        }) }}
                        <div class="invalid-feedback">
                            {% if form.imageFile.vars.errors|length %}
                                {% for error in form.imageFile.vars.errors %}
                                    {{ error.message }}
                                {% endfor %}
                            {% else %}
                                Veuillez uploader au moins une image valide
                            {% endif %}
                        </div>
                        <small class="form-text text-muted">Formats acceptés: JPG, PNG, GIF. Taille max: 5MB par image.</small>
                    </div>
                </div>
            </div>
            
            <button type="submit" class="btn btn-primary mt-3">
                <i class="fas fa-save me-2"></i> Créer la salle
            </button>
        {{ form_end(form) }}
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.querySelector('form');
            
            form.addEventListener('submit', function(e) {
                if (!form.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                
                form.classList.add('was-validated');
            }, false);
            
            // Clear validation on input
            form.querySelectorAll('.form-control').forEach(input => {
                input.addEventListener('input', function() {
                    this.classList.remove('is-invalid');
                });
            });
            
            // Image file validation
            const fileInput = document.querySelector('#{{ form.imageFile.vars.id }}');
            if (fileInput) {
                fileInput.addEventListener('change', function() {
                    const files = this.files;
                    let isValid = true;
                    
                    if (files.length === 0) {
                        isValid = false;
                    } else {
                        for (let i = 0; i < files.length; i++) {
                            const file = files[i];
                            const validTypes = ['image/jpeg', 'image/png', 'image/gif'];
                            const maxSize = 5 * 1024 * 1024; // 5MB
                            
                            if (!validTypes.includes(file.type) || file.size > maxSize) {
                                isValid = false;
                                break;
                            }
                        }
                    }
                    
                    this.classList.toggle('is-invalid', !isValid);
                });
            }
        });
    </script>
{% endblock %}